user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=20r/s;

    # Blue-Green upstream configurations
    upstream mctx_api_blue {
        server mctx-blue:8000;
    }

    upstream mctx_api_green {
        server mctx-green:8000;
    }

    upstream mctx_vis_blue {
        server vis-blue:8050;
    }

    upstream mctx_vis_green {
        server vis-green:8050;
    }

    # Main server configuration
    server {
        listen 80;
        server_name mctx.example.com;
        
        # Redirect to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name mctx.example.com;
        
        # SSL configuration
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        
        # SSL settings
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256;
        
        # HSTS (optional)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Other security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";
        
        # API endpoint - proxies to blue or green based on env variable
        location /api/ {
            limit_req zone=api_limit burst=30 nodelay;
            
            # Include active deployment configuration
            include /etc/nginx/conf.d/active_deployment.conf;
            
            # Set headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # Visualization endpoint
        location /vis/ {
            # Include active deployment configuration
            include /etc/nginx/conf.d/active_deployment.conf;
            
            # Rewrite to remove /vis/ prefix
            rewrite ^/vis/(.*) /$1 break;
            
            # Set headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Increase buffer size for large responses
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'OK';
        }
        
        # Deployment control endpoint (protected)
        location /deployment/ {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            # Switch active deployment
            location /deployment/switch {
                content_by_lua_block {
                    -- Get requested color
                    local color = ngx.var.arg_color
                    if color ~= "blue" and color ~= "green" then
                        ngx.status = 400
                        ngx.say("Invalid color. Use 'blue' or 'green'.")
                        return
                    end
                    
                    -- Run switch script
                    local handle = io.popen("/scripts/switch-deployment.sh " .. color)
                    local result = handle:read("*a")
                    handle:close()
                    
                    ngx.say("Switching to " .. color .. " deployment: " .. result)
                }
            }
            
            # Get current deployment status
            location /deployment/status {
                content_by_lua_block {
                    local handle = io.popen("/scripts/get-deployment.sh")
                    local result = handle:read("*a")
                    handle:close()
                    
                    ngx.header.content_type = "application/json"
                    ngx.say('{"active":"' .. result .. '"}')
                }
            }
        }
        
        # Static assets
        location /static/ {
            root /usr/share/nginx/html;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }
        
        # Default root
        location = / {
            return 301 $scheme://$host/vis/;
        }
    }
}