version: '3.8'

# MCTX Development Docker Compose Configuration
# Lightweight CPU-only setup for development and testing

services:
  # Basic API service (CPU-only)
  api:
    build:
      context: ../..
      dockerfile: Dockerfile
    ports:
      - "${API_PORT:-8001}:8000"
    volumes:
      - ../../api:/app/api
    environment:
      - DEBUG=${DEBUG:-True}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - JAX_PLATFORM_NAME=cpu
      - MAX_BATCH_SIZE=${MAX_BATCH_SIZE:-64}
      - MAX_NUM_SIMULATIONS=${MAX_NUM_SIMULATIONS:-500}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/mcts/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
  
  # Simple frontend for development
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    depends_on:
      - api
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:${API_PORT:-8001}/api/v1
    restart: unless-stopped
    
  # Basic monitoring setup
  prometheus:
    image: prom/prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ../../config/prometheus/development.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped
    
  grafana:
    image: grafana/grafana
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  grafana_data:
    name: mctx_dev_grafana_data