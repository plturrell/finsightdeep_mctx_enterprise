version: '3.8'

# MCTX NVIDIA Docker Compose Configuration
# Focused specifically on NVIDIA GPU deployment

services:
  # NVIDIA GPU version with T4 optimizations
  mctx-nvidia:
    build:
      context: .
      dockerfile: docker/Dockerfile.nvidia
    image: mctx-nvidia:latest
    container_name: mctx-nvidia
    volumes:
      - ./examples:/app/examples
      - ./mctx_output:/app/mctx_output
    ports:
      - "8050:8050"  # Visualization server
      - "8000:8000"  # API server
    environment:
      - JAX_PLATFORM_NAME=gpu
      - MCTX_ENABLE_T4_OPTIMIZATIONS=1
      - XLA_PYTHON_CLIENT_ALLOCATOR=platform
      - LOG_LEVEL=INFO
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
    restart: unless-stopped
    
  # Visualization server (without API)
  mctx-vis:
    build:
      context: .
      dockerfile: docker/Dockerfile.nvidia
    image: mctx-nvidia:latest
    container_name: mctx-vis
    ports:
      - "8051:8050"  # Different port to avoid conflict
    volumes:
      - ./examples:/app/examples
      - ./mctx_output:/app/mctx_output
    environment:
      - JAX_PLATFORM_NAME=cpu
    command: ["visualize"]
    restart: unless-stopped
    
  # Prometheus for monitoring (optional)
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped
    
  # Grafana for dashboards (optional)
  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data: